{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Course","props","id","className","placeholder","defaultValue","title","Form","Select","onChange","e","onGradeChange","target","value","bg","grade","variant","step","min","onInput","onUnitChange","unit","type","Semester","courses","this","Row","Table","striped","bordered","hover","responsive","map","course","i","course_id","Button","onClick","addCourse","React","Component","App","state","semesters","gpa","total_credit_unit","total_quality_point","active_semester_key","sem_id","slice","semester","concat","setState","semester_id","getSemesterGpa","result","toString","length","event","forEach","parseInt","parseFloat","Navbar","Container","Brand","href","alt","src","logo","width","height","Nav","TabContainer","activeKey","defaultActiveKey","Col","sm","Tab","Content","Pane","eventKey","handleGradeChange","handleUnitChange","getCumulativeGpa","toFixed","Item","Link","setActiveSemester","createNewSemester","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3881d9dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Tab from 'react-bootstrap/Tab';\nimport TabContainer from 'react-bootstrap/TabContainer';\nimport Table from 'react-bootstrap/Table';\nimport React from 'react';\n\n\n\n\nfunction Course(props){\n  return(\n      <tr key={props.id}>\n        <td>{(props.id + 1)}</td>\n        <td><input className=\"course-title\" placeholder={\"Click to input course title\"} defaultValue={props.title}></input></td>\n        <td>\n          <Form.Select onChange={e=>props.onGradeChange(props.id, e.target.value)} bg=\"none\" value={props.grade} variant=\"none\"  title=\"Grade\">\n            <option value={5}>A</option>\n            <option value={4}>B</option>\n            <option value={3}>C</option>\n            <option value={2}>D</option>\n            <option value={1}>E</option>\n            <option value={0}>F</option>\n          </Form.Select>\n        </td>\n        <td>\n          <input step={1} min={0} onInput={e=>props.onUnitChange(props.id, e.target.value)} value={props.unit} id=\"course-credit\" type=\"number\"></input>\n        </td>\n      </tr>\n    \n  )\n}\n\nclass Semester extends React.Component{\n   \n  render(){\n    const courses = this.props.courses;\n    return(\n      <>  \n      <div className=\"semester_name col-header\">SEMESTER {(this.props.id + 1)}</div>                      \n      <Row>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Course Name or Code</th>\n              <th>Grade</th>\n              <th>Credits/Units</th>\n            </tr>\n          </thead>\n          <tbody>\n            {courses.map((course, i) =>{\n              return <Course key={i} id={i} title={course.title} \n                      unit={course.unit} grade={course.grade} \n                      onGradeChange={(course_id, grade)=>this.props.onGradeChange(this.props.id,course_id, grade)}\n                      onUnitChange={(course_id, unit)=>this.props.onUnitChange(this.props.id,course_id, unit)}/>\n            })}\n\n            <tr className=\"button-parent\">\n              <td></td>\n              <td></td>\n              <td></td>\n              <td className=\"button-parent\"><Button variant='light' className=\"add-course-btn\" onClick={()=>this.props.addCourse(this.props.id)}>Add New Course</Button></td>\n            </tr>\n          </tbody>\n        </Table>\n      </Row> {/* Table */}\n      </>\n    )\n  }\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    const id = 0\n    this.state = {\n      semesters:[{\n        courses:[{\n          title:\"\",\n          unit:0,\n          grade:5,\n        }],\n        gpa: 0,\n        total_credit_unit:0,\n        total_quality_point:0,\n      }],\n\n      active_semester_key: id,\n    }\n  }\n  //When I add the course delete function,\n  //When a course is deleted, change the props id to it's current place\n  //on the table\n  addCourse(sem_id){\n    const semesters = this.state.semesters.slice();\n    const semester = semesters[sem_id]\n\n    const courses = semester.courses.concat([{\n                    title:\"\",\n                    unit:0,\n                    grade:5,\n                  }]);\n    semester.courses = courses;\n\n    this.setState({\n      semesters: semesters\n    })\n  }\n\n  handleUnitChange(semester_id,course_id, unit){\n    const semesters = this.state.semesters.slice(); //Returns course\n    const semester = semesters[semester_id]\n    const courses = semester.courses\n    const course = courses[course_id]\n    course.unit = unit\n\n    const gpa = this.getSemesterGpa(courses)\n    \n    semester.gpa = gpa.result || 0\n    semester.total_credit_unit = gpa.total_credit_unit\n    semester.total_quality_point = gpa.total_quality_point\n    this.setState({\n      semesters: semesters\n    })\n\n  }\n\n  handleGradeChange(semester_id,course_id, grade){\n    const semesters = this.state.semesters.slice(); //Returns course\n    const semester = semesters[semester_id]\n    const courses = semester.courses\n    const course = courses[course_id]\n    course.grade = grade\n\n    const gpa = this.getSemesterGpa(courses)\n    semester.gpa = gpa.result || 0 //Using .toString, incase of NaN Value\n    semester.total_credit_unit = gpa.total_credit_unit.toString()\n    semester.total_quality_point = gpa.total_quality_point.toString()\n    this.setState({\n      semesters: semesters\n    })\n\n  }\n\n\n\n  createNewSemester(){\n    const id = this.state.semesters.length\n    const semesters = this.state.semesters.slice();      \n    this.setState({\n      semesters: semesters.concat([{\n        courses: [{\n          title:\"\",\n          unit:0,\n          grade:5,\n        }],\n        gpa: 0,\n        total_credit_unit:0,\n        total_quality_point:0,\n      }]),\n      active_semester_key: id,\n    });\n  }\n\n  setActiveSemester(event){\n    const id = event.target.value;\n    this.setState({\n      active_semester_key:id,\n    })\n  }\n\n  getSemesterGpa(courses){\n    let total_credit_unit = 0\n    let total_quality_point = 0\n    courses.forEach((course)=>{\n      const grade = parseInt(course.grade);\n      const unit = parseFloat(course.unit);\n      const quality_point = grade * unit;\n      total_quality_point += quality_point;\n      total_credit_unit += unit;\n    })\n\n    const result_gpa = total_quality_point/total_credit_unit;\n    return {result:result_gpa, total_quality_point:total_quality_point, total_credit_unit:total_credit_unit}\n  }\n\n  getCumulativeGpa(){\n    let total_quality_point = 0;\n    let total_credit_unit = 0;\n    this.state.semesters.forEach(semester=>{\n      total_credit_unit += semester.total_credit_unit;\n      total_quality_point += semester.total_quality_point;\n    })\n    let cgpa = (total_quality_point/total_credit_unit) || 0;\n    return (cgpa)\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"light\" variant=\"blue\">\n          <Container>\n            <Navbar.Brand href=\"#home\">\n              <img\n                alt=\"\"\n                src= {logo}\n                width=\"30\"\n                height=\"30\"\n                className=\"d-inline-block align-top\"\n              />\n            React Bootstrap\n            </Navbar.Brand>\n            <Nav bg=\"bg-cyan\" className=\"align-right\">\n              <Button href=\"#deets\">Login</Button>\n            </Nav>\n          </Container>\n        </Navbar>\n        <div className=\"title-div d-flex justify-content-center flex-column align-items-center\">\n            <h2>GPA CALCULATOR</h2>\n            <h5>Calculate Semester GPA and Cumulative GPA</h5>\n            <div className=\"gpa-card-div\">\n              <TabContainer activeKey={this.state.active_semester_key} defaultActiveKey={1}>\n                <Row>\n                  \n                  <Col sm={9} className=\"border-right\"> {/*GPA CALCULATION */}\n                    {this.state.semesters.map((semester, i)=>{ \n                      //Index will be preserved, so key=index\n                      return(\n                        <Tab.Content key={i}>\n                          <Tab.Pane eventKey={i}>\n                            <Semester id={i} courses={semester.courses} \n                            addCourse={(sem_id)=>{this.addCourse(sem_id)}} \n                            onGradeChange={(sem_id, course_id, grade)=>this.handleGradeChange(sem_id, course_id, grade)}\n                            onUnitChange={(sem_id, course_id, unit)=>this.handleUnitChange(sem_id, course_id, unit)}/>\n                          </Tab.Pane>\n                        </Tab.Content>\n                      )\n                    })}\n                    \n                  </Col>\n                    \n\n                  <Col>\n                    <div className=\"col-header\"></div>\n                    <Row>\n                      Cumulative GPA\n                    </Row>\n                      \n                    <Row>\n                      <Col sm={9}>Cumulative</Col>\n                      {this.getCumulativeGpa().toFixed(2)}/5\n                      <Col></Col>\n                    </Row>\n                    {this.state.semesters.map((semester, i)=>{\n                      return(\n                        <Row>\n                          <Col sm={9}>{'Semester ' + (i+1)}</Col>\n                          <Col>{semester.gpa.toFixed(2)}/5</Col>\n                        </Row>\n                      )\n                    })}\n\n                  </Col> {/* RESULT DISPLAYED */}\n                </Row>\n                \n\n                {/* Add New Semester Button */}\n                <div className=\"card-header-div\">\n                  <Container>\n                    <Nav className=\"justify-content-start p-2\">\n                      {\n                        this.state.semesters.map((semester, i)=>{\n                          return(\n                            <Nav.Item key={i}>\n                              <Nav.Link onClick={(e)=>this.setActiveSemester(e)} value={i} eventKey={i} className=\"semester_btn\">Semester {i+1}</Nav.Link>\n                            </Nav.Item>\n                          )\n                        })\n\n                      }\n                      <Nav.Item>\n                        <Button onClick={()=>{this.createNewSemester()}} className=\"add_semester\">+</Button>\n                      </Nav.Item>\n                    </Nav>\n                  </Container>\n                </div>\n              </TabContainer>\n              \n            </div>          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}